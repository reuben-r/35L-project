{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Ray/Desktop/CS35L/project/35L-project/client-server-app/fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/Ray/Desktop/CS35L/project/35L-project/client-server-app/fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport var getLocation = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var position, _position$coords, latitude, longitude;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!window.navigator.geolocation) {\n            _context.next = 14;\n            break;\n          }\n          _context.prev = 1;\n          _context.next = 4;\n          return new Promise(function (resolve, reject) {\n            navigator.geolocation.getCurrentPosition(resolve, reject);\n          });\n        case 4:\n          position = _context.sent;\n          _context.next = 10;\n          break;\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](1);\n          return _context.abrupt(\"return\");\n        case 10:\n          _position$coords = position.coords, latitude = _position$coords.latitude, longitude = _position$coords.longitude;\n          return _context.abrupt(\"return\", {\n            lat: latitude,\n            lng: longitude\n          });\n        case 14:\n          return _context.abrupt(\"return\");\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n  return function getLocation() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["getLocation","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","position","_position$coords","latitude","longitude","wrap","_callee$","_context","prev","next","window","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","sent","t0","abrupt","coords","lat","lng","stop","apply","arguments"],"sources":["/Users/Ray/Desktop/CS35L/project/35L-project/client-server-app/fe/src/utils/location.js"],"sourcesContent":["export const getLocation = async () => {\n  if (window.navigator.geolocation) {\n    let position;\n\n    try {\n      position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    } catch (error) {\n      return;\n    }\n\n    const { latitude, longitude } = position.coords;\n\n    return {\n      lat: latitude,\n      lng: longitude,\n    };\n  } else {\n    return;\n  }\n};\n"],"mappings":";;AAAA,OAAO,IAAMA,WAAW;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;IAAA,IAAAC,QAAA,EAAAC,gBAAA,EAAAC,QAAA,EAAAC,SAAA;IAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,KACrBC,MAAM,CAACC,SAAS,CAACC,WAAW;YAAAL,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAIX,IAAII,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;YAChDJ,SAAS,CAACC,WAAW,CAACI,kBAAkB,CAACF,OAAO,EAAEC,MAAM,CAAC;UAC3D,CAAC,CAAC;QAAA;UAFFd,QAAQ,GAAAM,QAAA,CAAAU,IAAA;UAAAV,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAW,EAAA,GAAAX,QAAA;UAAA,OAAAA,QAAA,CAAAY,MAAA;QAAA;UAAAjB,gBAAA,GAOsBD,QAAQ,CAACmB,MAAM,EAAvCjB,QAAQ,GAAAD,gBAAA,CAARC,QAAQ,EAAEC,SAAS,GAAAF,gBAAA,CAATE,SAAS;UAAA,OAAAG,QAAA,CAAAY,MAAA,WAEpB;YACLE,GAAG,EAAElB,QAAQ;YACbmB,GAAG,EAAElB;UACP,CAAC;QAAA;UAAA,OAAAG,QAAA,CAAAY,MAAA;QAAA;QAAA;UAAA,OAAAZ,QAAA,CAAAgB,IAAA;MAAA;IAAA,GAAAvB,OAAA;EAAA,CAIJ;EAAA,gBArBYL,WAAWA,CAAA;IAAA,OAAAC,IAAA,CAAA4B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAqBvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}